# -*- coding: utf-8 -*-
"""Predicting House Prices with Custom Preprocessing ( 2025 - 06 - 12 ).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ojqcZLpss658XzonqivaWcYFSdG1d2gP

##Predicting House Prices with Custom Preprocessing

>We want to:

* Impute missing values

*  Log-transform skewed features

*  Scale numerical features

* One-hot encode categorical features
  
* Train a RandomForestRegressor

> Load Libraries
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder , StandardScaler , FunctionTransformer
from sklearn.ensemble import RandomForestRegressor
from sklearn.impute import SimpleImputer
import numpy as np

"""> Sample data"""

# Sample data
df = pd.DataFrame({
    'LotArea': [8450, 9600, np.nan, 11250],
    'YearBuilt': [2003, 1976, 2001, 1915],
    'Neighborhood': ['CollgCr', 'Veenker', 'CollgCr', 'Crawfor'],
    'SalePrice': [208500, 181500, 223500, 140000]
})

df

"""> Split up features"""

X = df.drop('SalePrice' , axis=1)
y = df['SalePrice']

"""> Train test split"""

X_train , X_test , y_train ,y_test = train_test_split(X , y , test_size = 0.2)

"""> Columns"""

num_cols = ['LotArea' , 'YearBuilt']
cat_cols = ['Neighborhood']

"""> Lambda for log-transforming LotArea only"""

log_transformer = FunctionTransformer(lambda y: np.log1p(y) , validate=True)

"""> Preprocessing Pipelines"""

numeric_pipeline = Pipeline([
    ('imputer' , SimpleImputer(strategy='mean')),
    'log_transformer' , ColumnTransformer([
        ('log' , log_transformer , ['LotArea']),
        ('passthrough' , 'passthrough' , ['YearBuilt'])
    ], remainder='drop'),
    ('scaler' , StandardScaler())
])

