# -*- coding: utf-8 -*-
"""MNIST_image_digits_classification_.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lPimHNTfmEZde9gORoyqmx5sAuo6OytN
"""

import pandas as pd , numpy as np

from sklearn.datasets import load_digits

import sklearn

data = load_digits(as_frame=True)

X, y = data.data , data.target

from sklearn.model_selection import train_test_split

X_tr, X_ts , y_tr , y_ts = train_test_split(X , y , test_size=0.2 , random_state=42)

X.shape

y.shape

data.data

from sklearn.decomposition import PCA

nums = np.arange(20)

var_ratio = []

for num in nums:
  pca = PCA(n_components=num)
  pca.fit_transform(data.data)
  var_ratio.append(np.sum(pca.explained_variance_ratio_))

def plot(var_ratio: list,nums: np.number):

  import matplotlib.pyplot as plt

  plt.plot(nums,var_ratio,marker='o' , color='#FF1D8D')
  plt.grid()
  plt.xlabel("Numbers of Components")
  plt.ylabel("Explained Varience")
  plt.show()

plot(var_ratio , nums)

from sklearn.linear_model import LogisticRegression

lr = LogisticRegression(max_iter=999)

lr.fit(X_tr , y_tr)

pca = PCA(n_components=15)

X_tr = pca.fit_transform(X_tr)

X_ts = pca.transform(X_ts)

pred = lr.predict(X_ts)

accuracy = sklearn.metrics.accuracy_score(pred, y_ts)
print(f'Accuracy: {accuracy:.4f}')

score = sklearn.model_selection.cross_val_score(lr , X_ts , y_ts, cv=10)


print(f'Mean Accuracy: {np.mean(score):.3f}')

test_score = lr.score(X_ts , y_ts)
print(f'Ttest Acc: {test_score:.3f}')

